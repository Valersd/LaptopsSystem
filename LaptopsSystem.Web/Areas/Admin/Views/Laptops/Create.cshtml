@model LaptopsSystem.Web.Areas.Admin.Models.LaptopInput

@{
    ViewBag.Title = "Create laptop";
    var manufacturers = ViewBag.Manufacturers as IEnumerable<SelectListItem>;
    var monitorSizes = ViewBag.MonitorSizes as IEnumerable<SelectListItem>;
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ManufacturerId, "Manufacturer", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("ManufacturerId", manufacturers, "--Select--", new { @class = "form-control", autofocus = "" })
                        @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(m => m.MonitorSizeId, "Monitor size", new { @class = "control-label col-md-2", style = "padding-right:5px" })
                <div class="col-md-10" style="padding-left:25px">
                    @foreach (var size in monitorSizes)
                    {
                        @Html.RadioButtonFor(m => m.MonitorSizeId, size.Value, new { id = size.Text })
                        <label for="@size.Text" class="control-label h4"><em><strong>@String.Format("{0}\"", size.Text)</strong></em></label>@:&nbsp;&nbsp;&nbsp;
                    }
                    <br />
                    @Html.ValidationMessageFor(m => m.MonitorSizeId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.HardDisk, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.HardDisk, new { htmlAttributes = new { @class = "form-control", min = "0", step = "50" } })
                        <span class="text-primary h6"><em>Enter size in GB</em></span><br />
                        @Html.ValidationMessageFor(model => model.HardDisk, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Ram, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Ram, new { htmlAttributes = new { @class = "form-control", min = "0" } })
                        <span class="text-primary h6"><em>Enter size in GB</em></span><br />
                        @Html.ValidationMessageFor(model => model.Ram, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6 inner-addon left-addon">
                        <span class="glyphicon glyphicon glyphicon-gbp"></span>
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="text-primary h6"><em>Enter price in GBP with separator , or .</em></span><br />
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="text-primary h6"><em>Enter weight in kg with separator , or .</em></span><br />
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        @Html.EditorFor(m => m.ImageUrl, new { rows = "3" })

        @Html.EditorFor(m => m.AdditionalParts)

        @Html.EditorFor(m => m.Description)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-ok-circle"></span> Create</button>
                <a href="/Admin/Laptops" class="btn btn-danger"><span class="glyphicon glyphicon-ban-circle" aria-hidden="true"></span> Cancel</a>
            </div>
        </div>
    </div>
}

<div>
    <a href="/Admin/Laptops"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span> Go Back</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalize")
    @Scripts.Render("~/bundles/custom")
}
